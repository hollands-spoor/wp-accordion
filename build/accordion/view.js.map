{"version":3,"file":"accordion/view.js","mappings":"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","sources":["webpack://accordion/./src/accordion/view.js"],"sourcesContent":["/**\n * Initialize the accordion block.\n * Add event listeners to the accordion panes.\n * Open first pane when collapsed is false.\n * On opening a pane, close all other panes when oneAtATime is true.\n * On opening and closing a pane, set max-height of the content. This allows for smooth css transitions.\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\tconst accordionBlocks = document.querySelectorAll(\n\t\t\".wp-block-hs-blocks-accordion\",\n\t);\n\n\t/**\n\t * Scrollheight is not correct during transition. So it can not serve during\n\t * transition of a the max height of a pane.\n\t *\n\t * Therefore this method is called twice: once before transition with reset = true.\n\t * Then again after transition with reset = false. The parent needs its\n\t * css max-height set afterwards for the case that this parent itself is\n\t * collapsed by the user. All this is only here for the case the accordion\n\t * needs animation by means of .js class-changes and css.\n\t *\n\t * max-height and its css transition seems to be the most used way to animate.\n\t * But maybe something else can be found?\n\t *\n\t * TODO: reset can be called unset, for that is what actually happens during\n\t * the transition.\n\t *\n\t * Traverse upwards in the DOM and find out if accordion-block is inside the pane\n\t * of another accordion-block.\n\t * If so, unset the max-height of the content of that parent pane during\n\t * animation ( i.e. during transition of css max-height ).\n\t * After the transition is done, set\n\t * the max-height back to the content's scrollHeight.\n\t */\n\tconst checkForParentPane = (element, unset) => {\n\t\tconst parentPane = element.closest(\".wp-block-hs-blocks-accordion-pane\");\n\t\tif (parentPane) {\n\t\t\tconst content = parentPane.querySelector(\".pane-content\");\n\t\t\tif (unset) {\n\t\t\t\t//content.style.maxHeight = \"unset\";\n\t\t\t\tcontent.style.removeProperty('max-height');\n\t\t\t} else {\n\t\t\t\tcontent.style.maxHeight = content.scrollHeight + \"px\";\n\t\t\t}\n\t\t\tconst parentBlock = parentPane.closest(\".wp-block-hs-blocks-accordion\");\n\t\t\tif (parentBlock) {\n\t\t\t\tcheckForParentPane(parentBlock);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Check if an element is in the viewport\n\t * @param {Element} element - The element to check\n\t * @return {boolean} - True if the element is in the viewport, false otherwise\n\t */\n\tconst isInViewport = (element) => {\n\t\tconst rect = element.getBoundingClientRect();\n\t\treturn (\n\t\t\trect.top >= 0 &&\n\t\t\trect.left >= 0 &&\n\t\t\trect.bottom <=\n\t\t\t\t(window.innerHeight || document.documentElement.clientHeight) &&\n\t\t\trect.right <= (window.innerWidth || document.documentElement.clientWidth)\n\t\t);\n\t};\n\n\n\n\n\taccordionBlocks.forEach((block) => {\n\t\tconst oneAtATime = block.getAttribute(\"data-one-at-a-time\") === \"true\";\n\t\tconst collapsed = block.getAttribute(\"data-collapsed\") === \"true\";\n\t\tconst accordionPanes = block.querySelectorAll(\n\t\t\t\":scope > .wp-block-hs-blocks-accordion-pane\",\n\t\t);\n\t\t// const allPanes = block.querySelectorAll('.wp-block-hs-blocks-accordion-pane');\n\n\n\n\n\t\taccordionPanes.forEach((pane, index) => {\n\t\t\tconst header = pane.querySelector(\".pane-header\");\n\t\t\tconst content = pane.querySelector(\".pane-content\");\n\t\t\t// If collapsed is false, open the first pane\n\t\t\tif (!collapsed && index === 0) {\n\t\t\t\tpane.classList.add(\"active\");\n\t\t\t\tcontent.style.maxHeight = content.scrollHeight + \"px\";\n\t\t\t} else {\n\t\t\t\tcontent.style.maxHeight = \"0\";\n\t\t\t}\n\n\t\t\theader.addEventListener(\"focus\", function (event) {\n\t\t\t\tconsole.log(\"focus\", pane);\n\t\t\t});\n\t\t\theader.addEventListener(\"click\", function (event) {\n\t\t\t\tconsole.log(\"click\", pane);\n\t\t\t\tif (oneAtATime) {\n\t\t\t\t\t// Close other open panes, i.e. remove 'active' class from all sibling panes\n\t\t\t\t\taccordionPanes.forEach((siblingPane) => {\n\t\t\t\t\t\tif (siblingPane !== pane) {\n\t\t\t\t\t\t\tsiblingPane.classList.remove(\"active\");\n\t\t\t\t\t\t\tsiblingPane.querySelector(\".pane-content\").style.maxHeight = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Toggle 'active' class on the clicked pane\n\t\t\t\tpane.classList.toggle(\"active\");\n\t\t\t\tif (pane.classList.contains(\"active\")) {\n\t\t\t\t\tcontent.style.maxHeight = content.scrollHeight + \"px\";\n\t\t\t\t} else {\n\t\t\t\t\tcontent.style.maxHeight = \"0\";\n\t\t\t\t}\n\n\t\t\t\t/**\n                 * If you want to change the url when a pane is opened, you can do it here. \n                \n                if(pane.classList.contains(\"active\")) {\n                    // get the id of the pane header and change the url to include it\n                    const id = header.id;\n                    window.history.pushState(null, null, `#${id}`);\n                } else {\n\n                    window.history.pushState(null, null, window.location.pathname);\n                }\n                */\n\n\t\t\t\t// Check if this block is in another pane\n\t\t\t\tcheckForParentPane(block, true);\n\t\t\t\tcontent.addEventListener(\n\t\t\t\t\t\"transitionend\",\n\t\t\t\t\tfunction onTransitionEnd(event) {\n\t\t\t\t\t\tif (event.propertyName === \"max-height\") {\n\t\t\t\t\t\t\tcontent.removeEventListener(\"transitionend\", onTransitionEnd);\n\t\t\t\t\t\t\tcheckForParentPane(block, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: if currently open pane is not in view, scroll it into view\n\t\t\t\t\t\tif (!isInViewport(header)) {\n\t\t\t\t\t\t\theader.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t\n\t\t\t// Add keyup event listener to handle spacebar key\n\t\t\theader.addEventListener(\"keydown\", function (event) {\n\t\t\t\tif (event.code === \"Enter\" || event.key === \"Enter\") {\n\t\t\t\t\tif (document.activeElement === header) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\theader.click();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\n\t});\n});\n"],"names":["document","addEventListener","accordionBlocks","querySelectorAll","checkForParentPane","element","unset","parentPane","closest","content","querySelector","style","removeProperty","maxHeight","scrollHeight","parentBlock","isInViewport","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","forEach","block","oneAtATime","getAttribute","collapsed","accordionPanes","pane","index","header","classList","add","event","console","log","siblingPane","remove","toggle","contains","onTransitionEnd","propertyName","removeEventListener","scrollIntoView","behavior","code","key","activeElement","preventDefault","stopPropagation","click"],"sourceRoot":""}